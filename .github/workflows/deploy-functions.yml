name: Deploy Supabase Functions

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options: [dev, stg, prod]
      project_ref:
        description: 'Supabase Project Ref'
        required: true
        default: 'uixxblawpalitvbucaon'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Activate pnpm
        run: corepack prepare pnpm@9.7.0 --activate

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Verify secrets
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          if [ -z "$SUPABASE_ACCESS_TOKEN" ]; then
            echo "Missing SUPABASE_ACCESS_TOKEN secret in repository settings." >&2
            exit 1
          fi

      - name: Link project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase link --project-ref "${{ inputs.project_ref }}"

      - name: Optional DB push (run only if password provided and migrations exist)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          if [ -n "$SUPABASE_DB_PASSWORD" ] && ls supabase/migrations/*.sql >/dev/null 2>&1; then
            supabase link --project-ref "${{ inputs.project_ref }}" --password "$SUPABASE_DB_PASSWORD"
            supabase db push
          else
            echo "Skipping db push (no SUPABASE_DB_PASSWORD or no migrations)."
          fi

      - name: Deploy function sync-cin7-stock
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase functions deploy sync-cin7-stock --project-ref "${{ inputs.project_ref }}"

      - name: Deploy function invoice-ocr-extract
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase functions deploy invoice-ocr-extract --project-ref "${{ inputs.project_ref }}"
